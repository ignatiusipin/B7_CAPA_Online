
<div class="card">
    <div class="card-body">
        
        <input type="button" class="btn btn-primary" id="btn_Request_Page" value="Show Request Page" />
        <br />
        <br />
        <h4 class="card-title">Analisa Kondisi</h4>
        <div class="table-responsive">
            <table class="table table-bordered zero-configuration" id="tblAnalisaKondisi">
                <thead>
                    <tr>
                        <th>Aspect</th>
                        <th>WHAT SHOULD BE HAPPENED</th>
                        <th>WHAT ACTUALLY HAPPENED</th>
                        <th>OK/NOK</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Potential Root Cause </h4>
        <div class="col-md-1">
            <input type="button" class="btn btn-primary" id="ShowDiag" data-toggle="modal" data-target="#Modal_Diag" data-backdrop="static" value="Show Diagram" />
        </div>
    </div>
</div>
<br />
<div class="modal fade" id="Modal_Diag" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Filter</h5>
            </div>
            <div class="modal-body">
                <div id="DiagManusia"
                     style="width:100%; height:300px; background-color: #DAE4E4;"></div>
                <br />

                <div id="DiagMaterial"
                     style="width:100%; height:300px; background-color: #DAE4E4;"></div>
                <br />
                <div id="DiagLingkungan"
                     style="width:100%; height:300px; background-color: #DAE4E4;"></div>
                <br />

                <div id="DiagMesin"
                     style="width:100%; height:300px; background-color: #DAE4E4;"></div>
                <br />

                <div id="DiagMetode"
                     style="width:100%; height:300px; background-color: #DAE4E4;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="btn_Close_Diag">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Penentuan Tindakan Perbaikan</h4>
        <div class="table-responsive">
            <form>
                <div class="col-md-6">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered zero-configuration" id="Tbl_Perbaikan">
                            <thead>
                                <tr>
                                    <th>Root Cause</th>
                                    <th>Tindakan Perbaikan</th>
                                    <th>Hasil_Perbaikan</th>
                                    <th>Nama Pelaksana</th>
                                    <th>Due_Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Penentuan Tindakan Pencegahan</h4>
        <div class="table-responsive">
            <form>
                <div class="col-md-6">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered zero-configuration" id="Tbl_Pencegahan">
                            <thead>
                                <tr>
                                    <th>Root Cause</th>
                                    <th>Tindakan Pencegahan</th>
                                    <th>Hasil_Pencegahan</th>
                                    <th>Nama Pelaksana</th>
                                    <th>Due_Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <h4 class="card-title">Kajian Risiko</h4>
        <div class="row form-group">
            <div class="col-md-7">
                <select id="RootCause_KajianResikoDDL" class="form-control" hidden>
                </select>
            </div>
            <div class="col-md-3">
                <button type="button" id="btn_AddKajian" class="btn btn-dark mb-2" data-toggle="modal" data-target="#KajianResikoModal" hidden>Tambahkan Kajian Risiko</button>
            </div>
        </div>
        <div class="table-responsive mb-3" style="border: 1px solid #DCDCDC;">
            <table class="table table-striped table-bordered zero-configuration" id="Tbl_KajianResiko">
                <thead>
                    <tr>
                        <th id="tblHeaderTindakan">Tindakan</th>
                        <th>Potensi Kegagalan / Penyimpangan yang mungkin terjadi ketika tindakan perbaikan/pencegahan diterapkan</th>
                        <th>Spesifikasi / Syarat</th>
                        <th>Dampak</th>
                        <th>Severity (S)</th>
                        <th>Penyebab Potensial</th>
                        <th>Mengatasi Penyebab Potensial</th>
                        <th>Likelihood (L)</th>
                        <th>Mencegah Potensi Kegagalan Lolos Menimbulkan Dampak</th>
                        <th>Detectability (D) </th>
                        <th>RPN (SxLxD)</th>
                        <th>Risk Level</th>
                        <th>TARGET</th>
                        <th>Menghilangkan Potensi Kegagalan/ Penyimpangan</th>
                        <th>Severity (S)</th>
                        <th>PERBAIKAN untuk mengatasi Penyebab Potensial</th>
                        <th>Likelihood (L)</th>
                        <th>PERBAIKAN untuk meningkatkan deteksi potensi kegagalan</th>
                        <th>Detectability (D)</th>
                        <th>RPN (SxLxD)</th>
                        <th>Risk Level</th>
                        <th>PIC</th>
                        <th>Due Date</th>
                        <th>Lainnya</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="Tbl_PRCA">
                </tbody>
            </table>
        </div>

    </div>
</div>

<input type="text" class="btn btn-primary" id="QS_NoCAPA" value="@ViewBag.NoCAPA" hidden />
<script src="https://unpkg.com/gojs/release/go-debug.js" defer></script>
s
<script>
    $(document).ready(function () {
        GetRootManusia();
        GetRootMaterial();
        GetRootLingkungan();
        GetRootMesin();
        GetRootMetode();
        GetAnalisaKondisi();
        GetTindakanPerbaikanPV();
        GetTindakanPencegahanPV();
        TableKajianPV();
        $('#ShowDiag').click(function () {
            $('#Modal_Diag').attr("hidden", false);
        });

        $('#ShowAnalisa').click(function () {
            $('#Modal_Analisa').attr("hidden", false);
        });
        $('#btn_Request_Page').click(function () {

            window.open('../Koordinator/CreateCAPA?CAPA=' + $('#QS_NoCAPA').val() + '')
        });
    });

    function GetRootManusia() {

        $.ajax({
            type: "POST",
            url: "../Koordinator/GetRoot?NoCapa=" + $('#QS_NoCAPA').val() + "&Type=Manusia",
            dataType: 'json',
            async: true,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var $ = go.GraphObject.make;

                var myDiagram =
                    $(go.Diagram, "DiagManusia",
                        {
                            "undoManager.isEnabled": true,
                            contentAlignment: go.Spot.Center,
                            layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                                { angle: 90, layerSpacing: 35 })
                        });


                myDiagram.nodeTemplate =
                    $(go.Node, "Horizontal",
                        { background: "#44CCFF", locationSpot: go.Spot.Center },
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, width: 75, height: 25, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "type")),
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "desc"))
                    );

                myDiagram.model = new go.TreeModel(result);
            }
        });
    }
    function GetRootMaterial() {

        $.ajax({
            type: "POST",
            url: "../Koordinator/GetRoot?NoCapa=" + $('#QS_NoCAPA').val() + "&Type=Material/Produk",
            async: true,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var $ = go.GraphObject.make;

                var myDiagram =
                    $(go.Diagram, "DiagMaterial",
                        {
                            "undoManager.isEnabled": true,
                            contentAlignment: go.Spot.Center,
                            layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                                { angle: 90, layerSpacing: 35 })

                        });


                myDiagram.nodeTemplate =
                    $(go.Node, "Horizontal",
                        { background: "#44CCFF" },
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, width: 75, height: 50, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "type")),
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "desc"))
                    );

                myDiagram.model = new go.TreeModel(result);
            }
        });
    }
    function GetRootLingkungan() {

        $.ajax({
            type: "POST",
            url: "../Koordinator/GetRoot?NoCapa=" + $('#QS_NoCAPA').val() + "&Type=Lingkungan",
            dataType: 'json',
            async: true,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var $ = go.GraphObject.make;

                var myDiagram =
                    $(go.Diagram, "DiagLingkungan",
                        {
                            "undoManager.isEnabled": true,
                            contentAlignment: go.Spot.Center,
                            layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                                { angle: 90, layerSpacing: 35 })
                        });


                myDiagram.nodeTemplate =
                    $(go.Node, "Horizontal",
                        { background: "#44CCFF" },
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, width: 75, height: 25, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "type")),
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "desc"))
                    );

                myDiagram.model = new go.TreeModel(result);
            }
        });
    }
    function GetRootMesin() {

        $.ajax({
            type: "POST",
            url: "../Koordinator/GetRoot?NoCapa=" + $('#QS_NoCAPA').val() + "&Type=Mesin",
            dataType: 'json',
            async: true,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var $ = go.GraphObject.make;

                var myDiagram =
                    $(go.Diagram, "DiagMesin",
                        {
                            "undoManager.isEnabled": true,
                            contentAlignment: go.Spot.Center,
                            layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                                { angle: 90, layerSpacing: 35 })
                        });


                myDiagram.nodeTemplate =
                    $(go.Node, "Horizontal",
                        { background: "#44CCFF" },
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, width: 75, height: 25, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "type")),
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "desc"))
                    );

                myDiagram.model = new go.TreeModel(result);
            }
        });
    }
    function GetRootMetode() {

        $.ajax({
            type: "POST",
            url: "../Koordinator/GetRoot?NoCapa=" + $('#QS_NoCAPA').val() + "&Type=Metode",
            dataType: 'json',
            async: true,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var $ = go.GraphObject.make;

                var myDiagram =
                    $(go.Diagram, "DiagMetode",
                        {
                            "undoManager.isEnabled": true,
                            contentAlignment: go.Spot.Center,
                            layout: $(go.TreeLayout, // specify a Diagram.layout that arranges trees
                                { angle: 90, layerSpacing: 35 })
                        });


                myDiagram.nodeTemplate =
                    $(go.Node, "Horizontal",
                        { background: "#44CCFF" },
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, width: 75, height: 25, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "type")),
                        $(go.TextBlock, "Default Text",
                            {
                                margin: 10, stroke: "white", font: "bold 16px sans-serif", textAlign: "center", wrap: go.TextBlock.WrapFit,
                                verticalAlignment: go.Spot.Center
                            },
                            new go.Binding("text", "desc"))
                    );

                myDiagram.model = new go.TreeModel(result);
            }
        });
    }
    function GetAnalisaKondisi() {
        $.ajax({
            type: "POST",
            url: "../Koordinator/GetAnalisa?NoCapa=" + $('#QS_NoCAPA').val() + "",
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#tblAnalisaKondisi').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "destroy": true,
                    "columns": [
                        { "data": "WAHType" },
                        { "data": "WSBHDesc" },
                        { "data": "WAHDesc" },
                        { "data": "WAHStatus" },


                    ],
                    "order": [[0, 'asc']],
                });

            }
        });
    }

    function GetTindakanPerbaikanPV() {
        var dictlist = {
            NoCAPA: $('#QS_NoCAPA').val(),
            Option: 1,
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: '../Koordinator/DynamicController?spname=SP_SHOW_Tindakan_PV',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_Perbaikan').DataTable({
                    "pageLength": 5,
                    "lengthChange": true,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,
                    "columns": [
                        { "data": "WhyDesc" },
                        { "data": "Tindakan_Perbaikan" },
                        { "data": "Hasil_Perbaikan" },
                        { "data": "EmpName" },
                        { "data": "tanggal" }
                    ],
                    "order": [[1, 'asc']],
                })
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function GetTindakanPencegahanPV() {
        var dictlist = {
            NoCAPA: $('#QS_NoCAPA').val(),
            Option: 2,
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: '../Koordinator/DynamicController?spname=SP_SHOW_Tindakan_PV',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_Pencegahan').DataTable({
                    "pageLength": 5,
                    "lengthChange": true,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,
                    "columns": [
                        { "data": "WhyDesc" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "Hasil_Pencegahan" },
                        { "data": "EmpName" },
                        { "data": "tanggal" }
                    ],
                    "order": [[1, 'asc']],

                });

            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    function TableKajianPV() {
        $.ajax({
            url: '/PIC/GetKajianResiko',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    NO_CAPA: $('#QS_NoCAPA').val(),
                    Option: 11,
                    Aspect: '',
                    WSBH: '',
                    WAH: '',
                    Status: '',
                    isParent: '',
                    WHY_Parent: '',
                    WHY: '',
                    Tindakan: '',
                    Pelaksana: '',
                    LineNumber: '',
                    NamaPersonil: '',
                    Email: '',
                    DueDate: '',
                    Is_AreaLain: '',
                    WhyID: '',
                    WhyParentID: '',
                    RootCause: ''
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#Tbl_KajianResiko').DataTable({
                    "pageLength": 5,
                    "lengthChange": true,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "bDestroy": true,
                    "scrollCollapse": true,
                    "columns": [
                        { "data": "Tindakan" },
                        { "data": "P_Kegagalan" },
                        { "data": "Spek" },
                        { "data": "Dampak" },
                        { "data": "Severity" },
                        { "data": "Penyebab" },
                        { "data": "M_Penyebab" },
                        { "data": "Likelihood" },
                        { "data": "M_PKegagalan_LMD" },
                        { "data": "Detectability" },
                        { "data": "RPN" },
                        {
                            "data": "RiskLevel",
                            "className": "riskLevel"
                        },
                        { "data": "Target" },
                        { "data": "M_PKegagalan" },
                        { "data": "Severity2" },
                        { "data": "P_MPenyebab" },
                        { "data": "Likelihood2" },
                        { "data": "P_MDPKegagalan" },
                        { "data": "Detectability2" },
                        { "data": "RPN2" },
                        {
                            "data": "RiskLevel2",
                            "className": "riskLevel2"
                        },
                        { "data": "PIC" },
                        { "data": "DueDate" },
                        { "data": "Lainnya" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete' type='button' name='delete' onchange=''>Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        },
                    ],
                    "order": [[1, 'asc']],
                    "rowCallback": function (row, data) {
                        ColoredColumns(row, data.RiskLevel, "riskLevel");
                        ColoredColumns(row, data.RiskLevel2, "riskLevel2");
                    }
                });
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    var isHide = false;
    function ColoredColumns(row, d, className) {
        if (d == "Low") {
            $('td.' + className, row).css({
                background: "limegreen",
                color: "#C0C0C0"
            });
        } else if (d == "Medium") {
            $('td.' + className, row).css({
                background: "yellow",
                color: "#C0C0C0"
            });
        } else if (d == "High") {
            $('td.' + className, row).css({
                background: "red",
                color: "#C0C0C0"
            });
        } else if (d == "Very High") {
            $('td.' + className, row).css({
                background: "black",
                color: "#C0C0C0"
            });
        }
    }//d = data
</script>

