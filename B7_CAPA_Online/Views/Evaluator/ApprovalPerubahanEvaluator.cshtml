
@{
    ViewBag.Title = "ApprovalPerubahanEvaluator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    @@media (min-width: 768px) {
        .modal-xl {
            width: 900%;
            max-width: 1300px;
        }
    }
</style>

<link href="~/Content/Scripts/plugins/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet" />
<script src="~/Content/Scripts/js/sweetalert2.all.min.js" defer></script>

<div class="content-body">
    <!--Modal-->
    <div class="row page-titles mx-0">
        <div class="col p-md-0">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                <li class="breadcrumb-item active"><a href="javascript:void(0)">Evaluator</a></li>
            </ol>
        </div>
    </div>
    <!-- row -->

    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Atasan Pelaksana</h4>
                <form>
                    <div class="row">
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-20">Tanggal</label>
                            <input type="text" id="date-format" class="form-control form-control-sm" value="@DateTime.Today.ToShortDateString()" readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-20">Nomor CAPA</label>
                            <input class="form-control form-control-sm" type="text" id="TxtNoCAPA" readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-40">Departemen</label>
                            <input class="form-control form-control-sm" type="text" id="TxtDepartemen" readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-40">User</label>
                            <input class="form-control form-control-sm" type="text" id="TxtRequestor" readonly>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="card">
                    <div class="card-body">
                        <h2>Approval Perubahan</h2>
                        <hr />
                        <h4 class="card-title">Tindakan Perbaikan </h4>
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_Perbaikan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Tindakan Perbaikan</th>
                                        <th>Tindakan Perbaikan Revisi</th>
                                        <th>Alasan Perubahan Tindakan Perbaikan</th>
                                        <th>Due Date</th>
                                        <th>Due Date Revisi</th>
                                        <th>Alasan Perubahan Due Date </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <h4 class="card-title">Tindakan Pencegahan</h4>
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_Pencegahan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Tindakan Pencegahan</th>
                                        <th>Tindakan Pencegahan Revisi</th>
                                        <th>Alasan Perubahan Tindakan Pencegahan</th>
                                        <th>Due Date</th>
                                        <th>Due Date Revisi</th>
                                        <th>Alasan Perubahan Due Date </th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="card">
            <div class="card-body">
                <div class="card">
                    <div class="card-body">
                        <h2>Approval Penambahan</h2>
                        <hr />
                        <h4 class="card-title">Tindakan Perbaikan </h4>
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_PerbaikanPenambahan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Tindakan Perbaikan</th>
                                        <th>Due Date</th>
                                        <th>Rentang</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <h4 class="card-title">Tindakan Pencegahan </h4>
                        <div class="table-responsive">
                            <div>
                                <table class="table table-hover table-bordered zero-configuration " cellpadding="0" cellspacing="0" style="color: black" id="Tbl_PencegahanPenambahan">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Root Cause</th>
                                            <th>Nama Pelaksana</th>
                                            <th>Tindakan Pencegahan</th>
                                            <th>Due Date</th>
                                            <th>Rentang</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="card">
            <div class="card-body">
                <div class="card">
                    <div class="card-body">
                        <h2>Approval Pembatalan</h2>
                        <hr />
                        <h4 class="card-title">Tindakan Perbaikan Pembatalan</h4>
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_PerbaikanPembatalan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Tindakan Perbaikan</th>
                                        <th>Due Date</th>
                                        <th>Alasan Pembatalan</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <h4 class="card-title">Tindakan Pencegahan Pembatalan</h4>
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_PencegahanPembatalan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Tindakan Pencegahan</th>
                                        <th>Due Date</th>
                                        <th>Alasan Pembatalan</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @Html.Partial("KajianResikoPV")


    </div>  
</div>
<!-- #/ container -->

<input type="text" id="input_NoCAPA" value="@ViewBag.NoCAPA" hidden>


<script>
    var noCAPA = getQueryStrings()["NoCAPA"];

    var nik = '@Request.RequestContext.HttpContext.Session["NIK"]';
    //var nik = "090500076";
    var namaUser = '@Request.RequestContext.HttpContext.Session["NamaUser"]';
    //var namaUser = 'DENNY IRAWAN';
    var tindakan = "Approval Perubahan";
    var superiorName = '@Request.RequestContext.HttpContext.Session["SuperiorName"]';
    var dataPerbaikan, attachmentPerbaikan, dataPencegahan, attachmentPencegahan;
    var statuser = false;
    var stataction = false;
    var laststate = false;
    var valid;
    var evautama;
    var referenceID = getQueryStrings()["ReferenceID"];
    var countPerbaikan;
    var countPencegahan;
    var countPerbaikanPenambahan;
    var countPencegahanPenambahan;
    var countPerbaikanPembatalan;
    var countPencegahanPembatalan;
    var count = 0;
    $('#input_NoCAPA').val(noCAPA);
    //function untuk ambil semua query string
    function getQueryStrings() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }
    function checkUser() {
        var dictlist = {
            NoCAPA: noCAPA,
            Option: 23,
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                console.log(nik);
                console.log(result);
                for (var i = 0; i < result.length; i++) {

                    if (result[i].EMPID == nik) {
                        valid = true;
                        if (result[i].IsUtama == true) {
                            evautama = true;
                        }
                        else {
                            evautama = false;
                        }
                        break;
                    }
                    else {
                        valid = false;
                    }
                    
                }
                GetTindakanPerbaikan();
                GetTindakanPencegahan();
                GetTindakanPerbaikanPenambahan();
                GetTindakanPencegahanPenambahan();
                GetTindakanPerbaikanPembatalan();
                GetTindakanPencegahanPembatalan();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    $(document).ready(function () {
        $('#TxtDepartemen').val('@Request.RequestContext.HttpContext.Session["Departemen"]');
        $('#TxtNoCAPA').val(noCAPA);
        $('#TxtRequestor').val(namaUser);
        $('#RootCause_KajianResikoDDL').attr('disabled', true);
        $('#btn_AddKajian').attr('disabled', true);
        checkUser();
        
        TableKajian();
        $('#Reject').click(function () {

            Reject();
        });

        $('#Approve').click(function () {

            Approve();
        });
    });

    function CheckPending() {
        var tableperbaikanperubahan = $('#Tbl_Perbaikan').DataTable().data().count();
        var tablepencegahanperubahan = $('#Tbl_Pencegahan').DataTable().data().count();
        var tableperbaikanpenambahan = $('#Tbl_PerbaikanPenambahan').DataTable().data().count();
        var tablepencegahanpenambahan = $('#Tbl_PencegahanPenambahan').DataTable().data().count();
        var tableperbaikanpembatalan = $('#Tbl_PerbaikanPembatalan').DataTable().data().count();
        var tablepencegahanpembatalan = $('#Tbl_PencegahanPembatalan').DataTable().data().count();
        count++;

        console.log(count);
        if (tableperbaikanperubahan == countPerbaikan && tablepencegahanperubahan == countPencegahan
            && tableperbaikanpenambahan == countPerbaikanPenambahan && tablepencegahanpenambahan == countPencegahanPenambahan
            && tableperbaikanpembatalan == countPerbaikanPembatalan && tablepencegahanpembatalan == countPencegahanPembatalan && count > 5) {

            window.location.href = '../PendingTask/TaskList';
        }
    }
    function GetTindakanPerbaikan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 19,
            Status_Perbaikan: "Perubahan Perbaikan"
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_Perbaikan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "responsive": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Perbaikan" },
                        { "data": "Tindakan_PerbaikanRev" },
                        { "data": "Alasan_Tindakan_Perbaikan"},
                        { "data": "tanggal" },
                        { "data": "tanggalRev" },
                        { "data": "Alasan_Due_Date" },
                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                if (row["IsUtama"] === true && row["Rentang"] === 0) {
                                    return "<input type='button' class='btn btn-primary' onclick=AddRentangPerbaikan(this) value='Add Rentang'style='background-color:green;'/>";
                                }
                                else if (row["IsApproved"] === true) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else if (row["Rentang"] != 0) {
                                    return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePerbaikan(this) value='Approve'style='background-color:green; margin-bottom:15px;'/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPerbaikan(this) value='Reject'style='background-color:red;'/>";
                                }

                            }


                        }

                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],
                })
                var result = JSON.parse(data);
                var temp = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1
                    }
                }
                countPerbaikan = temp;
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    function GetTindakanPencegahan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 20,
            Status_Pencegahan: "Perubahan Pencegahan"
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_Pencegahan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,

                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "Tindakan_PencegahanRev" },
                        { "data": "Alasan_Tindakan_Pencegahan" },
                        { "data": "tanggal" },
                        { "data": "tanggalRev" },
                        { "data": "Alasan_Due_Date" },
                        {
                            "data": "Status_ID",
                            "render": function (data, type, row, meta) {
                                if (row["IsUtama"] === true && row["Rentang"] === 0) {
                                    return "<input type='button' class='btn btn-primary' onclick=AddRentangPerbaikan(this) value='Add Rentang'style='background-color:green;'/>";
                                }
                                else if (row["IsApproved"] === true) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else {
                                    return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePencegahan(this) value='Approve'style='background-color:green; margin-bottom:15px;'/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPencegahan(this) value='Reject'style='background-color:red;'/>";
                                }
                            }
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],

                });

                var result = JSON.parse(data);
                var temp = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1
                    }
                }
                countPencegahan = temp;
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function ApprovePerbaikan(button)
    {
        var row = $(button).closest("TR");
        var data = $('#Tbl_Perbaikan').DataTable().row(row).data();
        var id = data['RecordID'];
        var dictlist = {
            NoCAPA: noCAPA,
            RecordID: id,
            Option: 9,
            Empid: nik
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid == true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Perbaikan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });
                    Swal.fire({
                        title: "Approve Berhasil!",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        GetTindakanPerbaikan();
                        TableKajian();
                    })
                }
            });
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

    function RejectPerbaikan(button) {
        if (valid == true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_Pencegahan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: noCAPA,
                        Option: 5,
                        RecordID: id,
                        RejectReason: reject,
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Perbaikan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });
                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPerbaikan();
                                    TableKajian();
                                })

                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {

                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

    function ApprovePencegahan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_Pencegahan').DataTable().row(row).data();
        var id = data['RecordID']
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            RecordID: id,
            Option: 10,
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid == true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Pencegahan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });
                    Swal.fire({
                        title: "Reject Berhasil!",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        GetTindakanPencegahan();
                        TableKajian();
                    })
                }
            });
        }
        else {

            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

    function RejectPencegahan(button) {
        if (valid == true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_Pencegahan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: noCAPA,
                        Option: 6,
                        RecordID: id,
                        RejectReason: reject,
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Pencegahan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });

                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPencegahan();
                                    TableKajian();
                                })

                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {

            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

    function TableKajian() {
        var dictlist = {
            NoCAPA: noCAPA,
            Option: 22,
            Stat:11,
            Status_Perbaikan: 'Perubahan Perbaikan',
            Status_Pencegahan: 'Perubahan Pencegahan'
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#Tbl_KajianResiko').DataTable({
                    "pageLength": 5,
                    "lengthChange": true,
                    "paging": false,
                    "info": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "bDestroy": true,
                    "scrollCollapse": true,
                    "columns": [
                        { "data": "Tindakan" },
                        { "data": "P_Kegagalan" },
                        { "data": "Spek" },
                        { "data": "Dampak" },
                        { "data": "Severity" },
                        { "data": "Penyebab" },
                        { "data": "M_Penyebab" },
                        { "data": "Likelihood" },
                        { "data": "M_PKegagalan_LMD" },
                        { "data": "Detectability" },
                        { "data": "RPN" },
                        {
                            "data": "RiskLevel",
                            "className": "riskLevel"
                        },
                        { "data": "Target" },
                        { "data": "M_PKegagalan" },
                        { "data": "Severity2" },
                        { "data": "P_MPenyebab" },
                        { "data": "Likelihood2" },
                        { "data": "P_MDPKegagalan" },
                        { "data": "Detectability2" },
                        { "data": "RPN2" },
                        {
                            "data": "RiskLevel2",
                            "className": "riskLevel2"
                        },
                        { "data": "FullName" },
                        { "data": "DueDate" },
                        { "data": "Lainnya" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-primary' type='button' name='delete' onchange='' style='background-color:gray' disabled>Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        },
                    ],
                    "order": [[1, 'asc']],
                    "rowCallback": function (row, data) {
                        ColoredColumns(row, data.RiskLevel, "riskLevel");
                        ColoredColumns(row, data.RiskLevel2, "riskLevel2");
                    }
                });
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function GetTindakanPerbaikanPenambahan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 19,
            Stat: 11,
            Status_Perbaikan: "Perbaikan Baru"
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_PerbaikanPenambahan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "responsive": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Perbaikan" },
                        { "data": "tanggal" },
                        {
                            "data": "Rentang",
                            "render": function (data, type, row, meta) {
                                var valrentang = data;
                                var rentang = $("<select class='form-control' style='padding:0px;'></select>");
                                for (var i = 1; i <= 12; i++) {
                                    var option = $("<option />");
                                    option.html(i + " Bulan");
                                    option.val(i);
                                    rentang.append(option);
                                    if (i == valrentang) {
                                        option.attr("selected", "selected")
                                        rentang.attr("disabled", true);
                                    }
                                }
                                return rentang[0].outerHTML;
                            }
                        },

                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                if (row["IsUtama"] === true && row["Rentang"] === 0) {
                                    return "<input type='button' class='btn btn-primary' onclick=AddRentangPerbaikan(this) value='Add Rentang'style='background-color:green;'/>";
                                }
                                else if (row["IsApproved"] == true) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else if (row["Rentang"] != 0) {
                                    return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePerbaikanPenambahan(this) value='Approve'style='background-color:green; margin-bottom:15px;'/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPerbaikanPenambahan(this) value='Reject'style='background-color:red;'/>";
                                }
                                else if (row["IsUtama"] === false && row["Rentang"] === 0) {
                                    return "Waiting Evaluator Utama Mengisi Rentang";
                                }
                            }


                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],
                })

                var result = JSON.parse(data);
                var temp = 0;
                var countRentangPerbaikan = 0;
                console.log(result);
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1;
                    }
                    if (result[i].Rentang == 0) {
                        countRentangPerbaikan += 1;
                    }
                }   
                if (evautama == false) {

                    countPerbaikanPenambahan = temp + countRentangPerbaikan;

                }
                else {

                    countPerbaikanPenambahan = temp;
                }
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    function GetTindakanPencegahanPenambahan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 24,
            Stat: 11
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var result = JSON.parse(data);
                var table = $('#Tbl_PencegahanPenambahan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,

                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "tanggal" },
                        {
                            "data": "Rentang",
                            "render": function (data, type, row, meta) {
                                var valrentang = data;
                                //var div = $('<div class="dropdown"></div>')
                                var rentang = $("<select class='form-control' style='padding:0px;'></select>");
                                for (var i = 1; i <= 12; i++) {

                                    var option = $("<option/>");
                                    option.html(i + " Bulan");
                                    option.val(i);
                                    rentang.append(option);
                                    if (i == valrentang) {
                                        option.attr("selected", "selected")
                                        rentang.attr("disabled", true);
                                    }
                                }
                                return rentang[0].outerHTML;
                            }
                        },
                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                console.log(row["Rentang"]);
                                console.log(row["IsUtama"]);
                                if (row["IsUtama"] === true && row["Rentang"] === 0) {
                                    return "<input type='button' class='btn btn-primary' onclick=AddRentangPencegahan(this) value='Add Rentang'style='background-color:green;'/>";
                                }
                                else if (row["Rentang"] != 0) {
                                    return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePencegahanPenambahan(this) value='Approve'style='background-color:green; '/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPencegahanPenambahan(this) value='Reject'style='background-color:red;'/>"
                                }
                                else if (row["IsApproved"] == 1 && row["EMPID"] == nik) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else if (row["IsUtama"] === false && row["Rentang"] === 0) {
                                    return "Waiting Evaluator Mengisi Rentang";
                                }
                            }
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],

                });
                var result = JSON.parse(data);
                var temp = 0;
                var countRentangPencegahan = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1;
                    }
                    if (result[i].Rentang == 0) {
                        countRentangPencegahan += 1;
                    }
                }
                if (evautama == false) {

                    countPencegahanPenambahan = temp + countRentangPencegahan;
                }
                else {

                    countPencegahanPenambahan = temp;
                }
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function AddRentangPerbaikan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PerbaikanPenambahan').DataTable().row(row).data();
        var id = data['RecordID'];
        var rentang = $("TD", row).eq(4).find("select").val();
        console.log(id);
        console.log(rentang);
        var dictlist = {
            RecordID: id,
            Option: 25,
            Rentang: rentang
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                Swal.fire({
                    title: "Rentang Berhasil Ditambahkan!",
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1000,
                }).then(() => {
                    GetTindakanPerbaikanPenambahan();
                })
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function ApprovePerbaikanPenambahan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PerbaikanPenambahan').DataTable().row(row).data();
        var id = data['RecordID'];
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            RecordID: id,
            Option: 14
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid == true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Perbaikan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });
                    Swal.fire({
                        title: "Approve Berhasil!",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        GetTindakanPerbaikanPenambahan();
                        TableKajian();
                    })

                }
            });
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })

        }
    }

    function RejectPerbaikanPenambahan(button) {
        if (valid == true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_PerbaikanPenambahan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: noCAPA,
                        Option: 12,
                        RecordID: id,
                        RejectReason: reject,
                        Tipe: 'Perbaikan Baru',
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Perbaikan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });
                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPerbaikanPenambahan();
                                    TableKajian();
                                })
                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
    }

    function AddRentangPencegahan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PencegahanPenambahan').DataTable().row(row).data();
        var id = data['RecordID'];
        var rentang = $("TD", row).eq(4).find("select").val();
        var dictlist = {
            RecordID: id,
            Option: 26,
            Rentang: rentang
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                Swal.fire({
                    title: "Rentang Berhasil Ditambahkan!",
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1000,
                }).then(() => {
                    GetTindakanPencegahanPenambahan();
                })
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function ApprovePencegahanPenambahan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PencegahanPenambahan').DataTable().row(row).data();
        var id = data['RecordID'];
        var kategori = data['Status_Pencegahan'];
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            RecordID: id,
            Option: 15,
            Kategori: kategori  
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid == true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Pencegahan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });

                    Swal.fire({
                        title: "Approve Berhasil!",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        GetTindakanPencegahanPenambahan();
                        TableKajian();
                    })
                }
            });
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
    }

    function RejectPencegahanPenambahan(button) {
        if (valid == true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_PencegahanPenambahan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: noCAPA,
                        Option: 13,
                        RecordID: id,
                        RejectReason: reject,
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Pencegahan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });

                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPencegahanPenambahan();
                                    TableKajian();
                                })
                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {

                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
    }

    function GetTindakanPerbaikanPembatalan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 19,
            Stat: 11,
            Status_Perbaikan: "Pembatalan Perbaikan"
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_PerbaikanPembatalan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "responsive": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Perbaikan" },
                        { "data": "tanggal" },
                        { "data": "Alasan_Pembatalan" },
                        {
                            "data": "Status_ID",
                            "render": function (data, type, row, meta) {
                                if (row["IsApproved"] === true) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else if (row["Rentang"] != 0) {
                                    return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePerbaikanPembatalan(this) value='Approve'style='background-color:green; margin-left:15px;'/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPerbaikanPembatalan(this) value='Reject'style='background-color:red;'/>";
                                }

                            }
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],

                })

                var result = JSON.parse(data);
                var temp = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1
                    }
                }
                countPerbaikanPembatalan = temp;
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }
    function GetTindakanPencegahanPembatalan() {
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            Option: 20,
            Stat: 11,
            Status_Pencegahan: "Pembatalan Pencegahan"
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_Perubahan',
            type: 'post',
            data: JSON.stringify(dto1),
            async: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_PencegahanPembatalan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,

                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyDesc" },
                        { "data": "PelaksanaName" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "tanggal" },
                        { "data": "Alasan_Pembatalan" },
                        {
                            "data": "Status_ID",
                            "render": function (data, type, row, meta) {
                               if (row["IsApproved"] === true) {
                                    return '<img id="imgApprove" src="../Content/Images/approveHijau.png" style="width: 80px"/>';
                                }
                                else {
                                   return "<input type='button' id='ApprovePerb' class='btn btn-primary' onclick=ApprovePencegahanPembatalan(this) value='Approve'style='background-color:green; margin-left:15px;'/> <input type='button' id='DeletePerb' class='btn btn-primary' onclick=RejectPencegahanPembatalan(this) value='Reject'style='background-color:red;'/>";
                                }
                            }
                        }

                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                    ],
                    "order": [[1, 'asc']],

                });
                var result = JSON.parse(data);
                var temp = 0;
                for (var i = 0; i < result.length; i++) {
                    if (result[i].IsApproved == true) {
                        temp += 1
                    }
                }
                countPencegahanPembatalan = temp;
                CheckPending();
            },
            error: function (ex) {
                alert(JSON.stringify(ex));
            }
        });
    }

    function ApprovePerbaikanPembatalan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PerbaikanPembatalan').DataTable().row(row).data();
        var id = data['RecordID'];
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            RecordID: id,
            Option: 16,
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid == true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Perbaikan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });
                    Swal.fire({
                        title: "Approve Berhasil!",
                        type: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        GetTindakanPerbaikanPembatalan();
                        TableKajian();
                    })
                }
            });
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

    function RejectPerbaikanPembatalan(button) {
        if (valid == true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_PerbaikanPembatalan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: $('#QS_NoCAPA').val(),
                        Option: 5,
                        RecordID: id,
                        RejectReason: reject,
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Perbaikan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });

                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPerbaikanPembatalan();
                                    TableKajian();
                                })
                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {

                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }
    function ApprovePencegahanPembatalan(button) {
        var row = $(button).closest("TR");
        var data = $('#Tbl_PencegahanPembatalan').DataTable().row(row).data();
        var id = data['RecordID'];
        var dictlist = {
            NoCAPA: noCAPA,
            Empid: nik,
            RecordID: id,
            Option: 17,
        }
        var dto1 = {
            Model: dictlist
        }
        if (valid = true) {
            $.ajax({
                url: 'DynamicController?spname=SP_FORM_Perubahan',
                type: 'post',
                data: JSON.stringify(dto1),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.ajax({
                        url: 'SubmitApproval',
                        type: 'post',
                        data: JSON.stringify({
                            Model: {
                                NO_CAPA: noCAPA,
                                Temp_Status: 12,
                                Tindakan: 'Pencegahan',
                                Tindakan_ID: id
                            }
                        }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                        },
                        error: function (ex) {
                            alert(JSON.stringify(ex));
                        }
                    });
                    Swal.fire({
                        title: "Approve Berhasil!",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000,
                    }).then(() => {
                        TableKajian();
                        GetTindakanPencegahanPembatalan();
                    })
                }
            });
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
    }

    function RejectPencegahanPembatalan(button) {
        if (valid = true) {
            Swal.fire({
                title: 'Alasan Reject',
                text: "You won't be able to revert this!",
                type: 'warning',
                html: '<textarea id="txtReject" class="form form-control" ></textarea>',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Reject!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var reject = $('#txtReject').val();
                    var row = $(button).closest("TR");
                    var data = $('#Tbl_PencegahanPembatalan').DataTable().row(row).data();
                    var id = data['RecordID'];
                    var dictlist = {
                        NoCAPA: noCAPA,
                        Option: 6,
                        RecordID: id,
                        RejectReason: reject,
                        Empid: nik
                    }
                    var dto1 = {
                        Model: dictlist
                    }
                    if (reject != null && reject.trim() != '') {
                        $.ajax({
                            url: "DynamicController?spname=SP_FORM_Perubahan",
                            type: "post",
                            dataType: "json",
                            data: JSON.stringify(dto1),
                            contentType: "application/json;charset=utf-8",
                            success: function (data) {
                                $.ajax({
                                    url: 'SubmitApproval',
                                    type: 'post',
                                    data: JSON.stringify({
                                        Model: {
                                            NO_CAPA: noCAPA,
                                            Temp_Status: 6,
                                            Tindakan: 'Pencegahan',
                                            Tindakan_ID: id
                                        }
                                    }),
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (data) {
                                    },
                                    error: function (ex) {
                                        alert(JSON.stringify(ex));
                                    }
                                });

                                Swal.fire({
                                    title: "Reject Berhasil!",
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    TableKajian();
                                    GetTindakanPencegahanPembatalan();
                                })
                            },
                            error: function (errormessage) {
                            }
                        });
                    }
                    else {

                        Swal.fire({
                            title: "Error!",
                            text: 'Alasan tidak boleh kosong!',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                }
            })
        }
        else {
            Swal.fire({
                title: "Error!",
                text: 'Khusus Evaluator yang Ditunjuk!',
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }

    }

</script>



